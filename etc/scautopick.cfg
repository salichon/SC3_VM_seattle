# Author for created objects
author = @appname@@@@hostname@

# Send to the PICK group
connection.primaryGroup = PICK

# Send amplitudes to this group
connection.amplitudeGroup = AMPLITUDE

# Receive objects from CONFIG group
connection.subscriptions = CONFIG

# The filter used to trigger
#filter = "RMHP(10)>>ITAPER(30)>>BW(4,0.7,2)>>STALTA(2,80)"

# The time correction applied to a detected pick
#timeCorrection = -0.8

# The record ringbuffer size in seconds
ringBufferSize = 300

# The leadTime defines the time in seconds to
# start picking on the streams before current
# time
leadTime = 300

# The initTime defines a timespan in seconds
# for that the picker is blind after initialization
# This time is needed to initialize the filter and
# depends on it
#initTime = 60
initTime = 10
module.trunk.global.initTime = 10 # ?

# Interpolate gaps linearly? This is valid for gaps
# short than thresholds.maxGapLength
gapInterpolation = false

# For which value on a filtered stream is
# a pick detected
thresholds.triggerOn = 3.5

# The value the filtered stream must reach to
# enable detection again
thresholds.triggerOff = 1.5

# The maximum gap length to handle. Gaps larger
# than this size reset the picker
thresholds.maxGapLength = 4.5
thresholds.maxGapLength = 0.5
module.trunk.global.thresholds.maxGapLength = 0.5 # ?

# The timeWindow used to compute a maximum (snr)
# amplitude on the filtered stream
#thresholds.amplMaxTimeWindow = 10
thresholds.amplMaxTimeWindow = 2 
module.trunk.global.thresholds.amplMaxTimeWindow = 2 # ?

#thresholds.deadTime = 30
thresholds.deadTime = 0
module.trunk.global.thresholds.deadTime = 0 # ?

thresholds.minAmplOffset = 3

# The amplitudes to compute triggered by
# a new P Pick continuously without having
# an Origin
#amplitudes = MLv, mb, mB
amplitudes = MLv, mB

# Configures the picker to use. By default only simple
# STALTA detections are emitted as picks. To enable "repicking"
# define a picker algorithm here. #2013/04
picker = AIC
# AIC filter parameters published in J Seismol (2010) 14:393411 / AIC Picking for local monitoring purposes
# Similar to Ken s choice
module.trunk.global.picker.AIC.minSNR=3
module.trunk.global.picker.AIC.filter="BW(4,2.5,15)"
module.trunk.global.picker.AIC.signalBegin=-20
module.trunk.global.picker.AIC.signalEnd=8

# Configures the secondary picker to be used.
spicker = ""

# If enabled the all streams are used for picking that are received by the
# picker. This option has only effect if a file is used as input which contains
# more data than the picker requests or if amplitudes are enabled which are using
# the horizontal components.
useAllStreams = false

# If enabled and a picker is configured then detections are sent as well.
# To distinguish between detections and picks the evaluation mode of the pick
# is set to manual. This is meant to be a debug option which can be used to
# compare detections and picks by their evaluation mode.
sendDetections = false

# Defines a list of modules loaded at startup.
plugins = ${plugins},mlh,locnll

# Warning: if a save if performed on scolv - stuff is changed here
# Use slink (seedlink) as record source service
#recordstream.service = sdsarchive
recordstream.service = combined  

#recordstream.service = slink # msrtsimul replay purposes ?
# Connect to local seedlink server via port 18000
#recordstream.source = "rosella.geonet.org.nz:18000;rosella.geonet.org.nz:18001??slinkMax=86400"
# Could be changed to spare ones (rhubarb is the Main server) ...
#recordstream.source = "rhubarb.geonet.org.nz:18000;rhubarb.geonet.org.nz:18001??slinkMax=86400"
recordstream.source = "sl-backup1.geonet.org.nz:18000;sl-backup1.geonet.org.nz:18001??slinkMax=86400"
#recordstream.source = "localhost:18000" # msrtsimul replay purposes ?
# msrtsimul replay purposes ?
#recordstream.source = /home/seiscomp/SDSarchive

# Show menu bar.
scheme.showMenu = true

# The color of inactive magnitudes.
scheme.colors.magnitudes.unset = d000ff00

# The color of idle stations.
scheme.colors.stations.idle = d000ff

# The depth gradient.
scheme.colors.originSymbol.depth.gradient = 0:FF0000,50:ffA500,100:FFFF00,250:00FF00,600:0000FF

# Setting this parameter to true will not interpolate between the depth steps
# and the color for a depth <= input is used.
scheme.colors.originSymbol.depth.discrete = true

# The precision of depth values.
scheme.precision.depth = 0

# The precision of lat/lon values.
scheme.precision.location = 2

# The precision of pick times.
scheme.precision.pickTime = 2

# Precision of displayed offset/amp in all trace widgets.
scheme.precision.traceValues = 1

# Precision of RMS values.
scheme.precision.rms = 2

# Configures the default filters selectable in manual picker. The entry with a
# leading "@" is selected as default filter.
picker.filters = "@Local;BW(4,2,15)","Tele;BW(3,0.1,4)","RegionalS;BW_HP(4,0.5)","DistantS;BW_LP(4,0.2)"

# Configure the columns of the event list that are visible initially. The first
# column containing the origin time is always visible and cannot be hidden.
# Possible values are: Type, M, TP, Phases, Lat, Lon, Depth, Stat, FM, Agency,
# Region, ID.
eventlist.visibleColumns = M,TP,Phases,Lat,Lon,Depth,Stat,Type,Region,ID

# Sets the default event type to be used when confirming a solution. If not
# set, the event type is not changed at all unless "with options" is used. The
# origin or its source must be associated with an event already.
olv.defaultEventType = earthquake

# Automatically starts computation of magnitudes after relocating an origin.
olv.computeMagnitudesAfterRelocate = false

# Starts magnitude computation without user interaction if everything runs
# without errors. In case of errors a window pops up with the current state of
# processing.
olv.computeMagintudesSilently = true

# The P reduction velocity used in the "move out" plot.
olv.Pvel = 6

# Sets the drawing of grid lines in the plot.
olv.drawGridLines = true

#Also could be usefull when user wants to swap from P to S phase in arrival tab selection
#######
# Focal mechanism computation  options
olv.computeMissingTakeOffAngles = true

# The default value for adding unassociated stations in the picker.
olv.defaultAddStationsDistance = 3

# If enabled then all traces without data are hidden in the picker.
olv.hideStationsWithoutData = false

# When creating an artificial origin this is the default depth used.
olv.defaultDepth = 10

# Maximum distance in degrees up to which also unassociated stations are shown
# in the map. The default value is -1 which will not show any unassociated
# station.
olv.map.stations.unassociatedMaxDist = 1.5

# Defines the visible columns in the arrival table. Valid tokens are: Used,
# Status, Phase, Weight, Method, Polarity, Takeoff, Net, Sta, Loc/Cha, Res,
# Dis, Az, Time, +/-, Created, Latency.
olv.arrivalTable.visibleColumns = Used,Phase,Sta,Loc/Cha,Res,Weight,Takeoff,Method,Dis,Time

# Activates a cross hair cursor showing the configured uncertainties when in
# picking mode.
picker.showCrossHairCursor = true

# Loads all three components by default. If disabled then additional components
# are fetched when requested.
picker.loadAllComponents = true

# Loads all existing picks for the requested data time window.
picker.loadAllPicks = true

# If enabled then acceleration data is loaded for co-located stations where
# picked on velocity data.
picker.loadStrongMotion = true

# If enabled then all three components are shown in the picker zoom trace.
picker.showAllComponents = true

# Defines the distance limit for the showAllComponents flag.
picker.allComponentsMaximumDistance = 10

# If enabled data is requested around the P pick for each stations. Otherwise
# origin time is used and the time window for all stations is the same.
picker.usePerStreamTimeWindows = false

# After picking and pushing the solution back to scolv all automatic arrivals
# are removed from a station if a manual pick exists.
picker.removeAutomaticPicksFromStationAfterManualReview = false

# After picking and pushing the solution back to scolv all automatic arrivals
# are removed from all stations regardless if a manual pick exists or not.
picker.removeAllAutomaticPicksAfterManualReview = false

# The data time span added to the left of either origin time or first arrival
# depending on the usePerStreamTimeWindows flag.
picker.preOffset = 900

# The data time span added to the right of the requested time window.
picker.postOffset = 600

# Minimum data time window length.
picker.minimumTimeWindow = 3000

# Defines a list of preferred pick uncertainty profiles.
picker.uncertainties.preferred = local

# for Clarity # Can be modified in GUI
#eventlist.visibleColumns = ID, Region, Phases, M, Depth
# Define a list of favourite phase for quick access
picker.phases.favourites = Pn,P,Pg,PmP,P1,Sg,S,Sn,SmS

# Time span in seconds to be added to the left of the used amplitude time
# window.
amplitudePicker.preOffset = 300

# Time span in seconds to be added to the right of the used amplitude time
# window.
amplitudePicker.postOffset = 300

# A list of filters used for the amplitude picker.
amplitudePicker.filters = ""

#### Additional Tools for QUALITY estimation ####
## DISPLAY the 'SED QUALITY' parameters
# 1. In the LOCATION TAB
# Define the comment id to be used
display.origin.comment.id = SED.quality

# Define the default display value if no comment is available
display.origin.comment.default = "-"

# Define the label text in the information panel for this value
display.origin.comment.label = "SED_Qual"

#
# Graphical display changes
scheme.fonts.base.family = Arial
scheme.fonts.base.size = 12

# Define the column header label
eventedit.customColumn = "SED_Qual"

# Allows to map comment values (strings) to colors. In this case the
# comment will have A,B,C or D which is mapped to green, yellow, orange and
# red
eventedit.customColumn.colors = "A:00FF00","B:rgb(64,192,0)","C:rgb(192,64,0)","D:FF0000"

# 2. In the EVENT TAB
# Define the default value if no comment is present
eventedit.customColumn.default = "-"

# Define the comment id to be used
eventedit.customColumn.originCommentID = SED.quality

# Define the column position in the table
eventedit.customColumn.pos = 4

# Define the column header label
eventlist.customColumn = "SED_Qual"

# Allows to map comment values (strings) to colors. In this case the
# comment will have A,B,C or D which is mapped to green, yellow, orange and
# red
eventlist.customColumn.colors = "A:00FF00","B:rgb(64,192,0)","C:rgb(192,64,0)","D:FF0000"

# 3. In the EVENTS TAB
# Define the default value if no comment is present
eventlist.customColumn.default = "-"

# Define the comment id to be used
eventlist.customColumn.originCommentID = "SED.quality"

# Define the column position in the table
eventlist.customColumn.pos = 5

# Draw fep names
map.layers.fep.drawName = true

# fep rank ?
map.layers.fep.rank = 3

# map display fep regions
map.layers.fep.visible = true
olv.computeMagnitudesSilently = false

#
olv.showSummary = true
picker.limitStationAcquisition = false
picker.limitStationAcquisitionCount = 15

#### Add some addtional Phases options available in Version Zurich
# Define two phase groups: regional and teleseismic
picker.phases.groups = regional,teleseismic

# Define all phases of group "regional"
picker.phases.groups.regional = Pn,P,Pg,PmP,P1,Sg,S,Sn,SmS

# Define all phases of group "teleseismic"
picker.phases.groups.teleseismic = pP,PKP

#
picker.uncertainties.local = 0.1,0.25,0.5,1.0,2.0

#
#
reloc.locator = NonLinLoc

### Map display
# if true, shows distances in km - degrees otherwise
scheme.unit.distanceInKM = true

# Overriden in global.cfg
#amplitudes = ML, MLh, MLv, mb, mB, mBc, Mwp, Ms(BB), Mjma
# Mlh plugin amplitude parameters
# MLh clipping level, in raw counts, eg. 80% of 2^23 = 6710886
#  module.trunk.global.MLh.ClippingThreshold = 6710886
# here should be accounted for in global.cfg
#amplitudes = ML, MLh, MLv, mb, mB, mBc, Mwp, Ms(BB), Mjma
#magnitudes = ML, MLh, MLv, mb, mB, mBc, Mw(mB), Mw(Mwp),Mwp, Ms(BB), Mjma, M
#amplitudes = MLv, ML, mB
#magnitudes = MLv, ML, mB, Mw(mB), M
#
visibleMagnitudes = ML,MLh,MLv,mb,mB,mBc,Mw(mB),Mw(Mwp),Mwp,Ms(BB),Mjma,M
